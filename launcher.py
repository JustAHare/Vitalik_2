import os
import subprocess
import yaml
import logging

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
with open('config.yaml', 'r', encoding='utf-8') as f:
    config = yaml.safe_load(f)

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(message)s')
logger = logging.getLogger(__name__)

# –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º –∏ —Å–∫—Ä–∏–ø—Ç–∞–º
MANUAL_INPUT_SCRIPT = "manual_input.py"
AGENT_SCRIPT = "agent.py"
ENVIRONMENT_SCRIPT = "environment.py"
DATA_PATH = config['paths']['training_data']
MODEL_PATH = config['general']['save_model_path']
META_MODEL_PATH = config['general']['save_meta_model_path']
LOG_PATH = config['general']['training_log_path']

# ==========================
# üõ†Ô∏è –£–¢–ò–õ–ò–¢–´
# ==========================
def clear_data():
    """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ –º–æ–¥–µ–ª–∏."""
    if os.path.exists(DATA_PATH):
        os.remove(DATA_PATH)
        logger.info("üóëÔ∏è –î–∞–Ω–Ω—ã–µ –æ–±—É—á–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã.")
    if os.path.exists(MODEL_PATH):
        os.remove(MODEL_PATH)
        logger.info("üóëÔ∏è –ú–æ–¥–µ–ª—å —É–¥–∞–ª–µ–Ω–∞.")
    if os.path.exists(META_MODEL_PATH):
        os.remove(META_MODEL_PATH)
        logger.info("üóëÔ∏è –ú–µ—Ç–∞-–º–æ–¥–µ–ª—å —É–¥–∞–ª–µ–Ω–∞.")
    print("‚úÖ –î–∞–Ω–Ω—ã–µ –∏ –º–æ–¥–µ–ª–∏ –±—ã–ª–∏ —Å–±—Ä–æ—à–µ–Ω—ã.")

def view_logs():
    """–í—ã–≤–æ–¥–∏—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤."""
    if os.path.exists(LOG_PATH):
        print("\nüìú –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ –ª–æ–≥–æ–≤:")
        with open(LOG_PATH, 'r') as log_file:
            lines = log_file.readlines()
            if lines:
                for line in lines[-20:]:
                    print(line.strip())
            else:
                print("‚ö†Ô∏è –õ–æ–≥–∏ –ø—É—Å—Ç—ã.")
    else:
        print("‚ö†Ô∏è –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω.")

# ==========================
# üìä –û–°–ù–û–í–ù–û–ï –ú–ï–ù–Æ
# ==========================
def main_menu():
    while True:
        print("\nüîµüü¢üü° –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –í–∏—Ç–∞–ª–∏–∫–∞! üü°üü¢üîµ")
        print("1. –†—É—á–Ω–æ–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö")
        print("2. –û–±—É—á–µ–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞")
        print("3. –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ")
        print("4. –°–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –∏ –º–æ–¥–µ–ª–µ–π")
        print("5. –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤")
        print("6. –í—ã—Ö–æ–¥")
        
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è: ").strip()
        
        if choice == '1':
            if not os.path.exists(MANUAL_INPUT_SCRIPT):
                print(f"‚ùå –°–∫—Ä–∏–ø—Ç {MANUAL_INPUT_SCRIPT} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                continue
            print("\nüöÄ –ó–∞–ø—É—Å–∫ —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö...")
            subprocess.run(["python", MANUAL_INPUT_SCRIPT])
            print("‚úÖ –†—É—á–Ω–æ–π –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à—ë–Ω.")
        elif choice == '2':
            if not os.path.exists(AGENT_SCRIPT):
                print(f"‚ùå –°–∫—Ä–∏–ø—Ç {AGENT_SCRIPT} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                continue
            print("\nüöÄ –ó–∞–ø—É—Å–∫ –æ–±—É—á–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞...")
            subprocess.run(["python", AGENT_SCRIPT])
            print("‚úÖ –û–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
        elif choice == '3':
            if not os.path.exists(ENVIRONMENT_SCRIPT):
                print(f"‚ùå –°–∫—Ä–∏–ø—Ç {ENVIRONMENT_SCRIPT} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                continue
            print("\nüöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è...")
            subprocess.run(["python", ENVIRONMENT_SCRIPT])
            print("‚úÖ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
        elif choice == '4':
            print("\nüóëÔ∏è –°–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –∏ –º–æ–¥–µ–ª–µ–π...")
            clear_data()
        elif choice == '5':
            print("\nüìú –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤...")
            view_logs()
        elif choice == '6':
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 6.")

if __name__ == '__main__':
    try:
        main_menu()
    except KeyboardInterrupt:
        print("\nüö® –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
    except Exception as e:
        logger.error(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –ª–∞—É–Ω—á–µ—Ä–µ: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
